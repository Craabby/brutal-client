{"version":3,"file":"leaderboardLogger.js","sourceRoot":"","sources":["../../examples/leaderboardLogger.ts"],"names":[],"mappings":";;AAAA,gCAAiC;AAIjC,IAAI,iBAAiB,GAAuB,EAAE,CAAA;AAE9C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;IAC5B,IAAI,QAAQ,GAAW,IAAI,CAAA;IAC3B,IAAI,CAAC,GAAG,GAAG;QAAE,QAAQ,GAAG,IAAI,CAAA;IAC5B,MAAM,GAAG,GAAiB,IAAI,aAAY,CACxC,sBAAsB,QAAQ,GAAG,CAAC,GAAG,CACtC,CAAA;IAED,GAAG,CAAC,EAAE,CAAC,MAAM,EAAE,GAAG,EAAE;QAClB,WAAW,CAAC,GAAG,EAAE;YACf,GAAG,CAAC,KAAK,CAAC,eAAe,CAAC,CAAA;QAC5B,CAAC,EAAE,IAAI,CAAC,CAAA;IACV,CAAC,CAAC,CAAA;IAEF,GAAG,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,IAAY,EAAE,EAAE;QAC/B,8CAA8C;IAChD,CAAC,CAAC,CAAA;IACF,GAAG,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,KAAY,EAAE,EAAE;QAC/B,8CAA8C;IAChD,CAAC,CAAC,CAAA;IAEF,GAAG,CAAC,EAAE,CAAC,SAAS,EAAE,CAAC,MAA+B,EAAE,EAAE;QACpD,IAAI,MAAM,CAAC,IAAI,KAAK,aAAa,EAAE;YACjC,iBAAiB,GAAG,iBAAiB,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;YACxE,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,CAAA;YAClB,iBAAiB;SAClB;IACH,CAAC,CAAC,CAAA;CACH;AAED,iBAAiB,GAAG,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,CAAA;AACvE,UAAU,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,EAAE,IAAI,CAAC,CAAA,CAAC,uBAAuB","sourcesContent":["import BrutalSocket from \"../src\"\nimport ParsedClientboundPacket from \"../src/interfaces/parsedClientboundPacket\"\nimport LeaderboardEntry from \"../src/interfaces/leaderboardEntry\"\n\nlet globalLeaderboard: LeaderboardEntry[] = []\n\nfor (let i = 0; i < 200; i++) {\n  let basePort: number = 8080\n  if (i > 100) basePort = 9000\n  const bot: BrutalSocket = new BrutalSocket(\n    `ws://51.91.214.104:${basePort + i}/`\n  )\n\n  bot.on(\"open\", () => {\n    setInterval(() => {\n      bot.spawn(\"brutal-client\")\n    }, 1000)\n  })\n\n  bot.on(\"close\", (code: number) => {\n    // console.log(\"bot closed\", code, bot.server)\n  })\n  bot.on(\"error\", (error: Error) => {\n    // console.log(\"bot error\", error, bot.server)\n  })\n\n  bot.on(\"message\", (packet: ParsedClientboundPacket) => {\n    if (packet.type === \"leaderboard\") {\n      globalLeaderboard = globalLeaderboard.concat(...packet.data.leaderboard)\n      bot.socket.close()\n      // process.exit()\n    }\n  })\n}\n\nglobalLeaderboard = globalLeaderboard.sort((a, b) => a.score - b.score)\nsetTimeout(() => console.log(globalLeaderboard), 4000) // my internet is trash\n"]}