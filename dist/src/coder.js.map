{"version":3,"file":"coder.js","sourceRoot":"","sources":["../../src/coder.ts"],"names":[],"mappings":"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","sourcesContent":["export class Writer {\n  public arraybuffer: ArrayBuffer\n  public view: DataView\n  public offset: number\n  constructor() {\n    this.arraybuffer = new ArrayBuffer(4096)\n    this.view = new DataView(this.arraybuffer)\n    this.offset = 0\n  }\n  public u8(value: number) {\n    this.view.setUint8(this.offset, value)\n    this.offset += 1\n  }\n  public u16(value: number) {\n    this.view.setUint16(this.offset, value, true)\n    this.offset += 2\n  }\n  public u32(value: number) {\n    this.view.setUint32(this.offset, value, true)\n    this.offset += 4\n  }\n  public i8(value: number) {\n    this.view.setInt8(this.offset, value)\n    this.offset += 1\n  }\n  public i16(value: number) {\n    this.view.setInt16(this.offset, value, true)\n    this.offset += 2\n  }\n  public i32(value: number) {\n    this.view.setUint32(this.offset, value, true)\n    this.offset += 4\n  }\n  public f32(value: number) {\n    this.view.setFloat32(this.offset, value, true)\n    this.offset += 4\n  }\n  public f64(value: number) {\n    this.view.setFloat64(this.offset, value, true)\n    this.offset += 8\n  }\n  public string(value: string) {\n    for (let i = 0; i < value.length; i++) this.u16(value.charCodeAt(i))\n    this.u16(0)\n  }\n  public get packet() {\n    return new Uint8Array(this.arraybuffer).slice(0, this.offset).buffer\n  }\n}\n\nexport class Reader {\n  public buffer: ArrayBuffer\n  public view: DataView\n  public offset: number\n\n  constructor(array: Buffer) {\n    this.buffer = new Uint8Array(array).buffer\n    this.view = new DataView(this.buffer)\n    this.offset = 0\n  }\n  public u8() {\n    const val = this.view.getUint8(this.offset)\n    this.offset += 1\n    return val\n  }\n  public u16() {\n    const val = this.view.getUint16(this.offset, true)\n    this.offset += 2\n    return val\n  }\n  public u32() {\n    const val = this.view.getUint32(this.offset, true)\n    this.offset += 4\n    return val\n  }\n  public i8() {\n    const val = this.view.getInt8(this.offset)\n    this.offset += 1\n    return val\n  }\n  public i16() {\n    const val = this.view.getInt16(this.offset, true)\n    this.offset += 2\n    return val\n  }\n  public i32() {\n    const val = this.view.getInt32(this.offset, true)\n    this.offset += 4\n    return val\n  }\n  public f32() {\n    const val = this.view.getFloat32(this.offset, true)\n    this.offset += 4\n    return val\n  }\n  public f64() {\n    const val = this.view.getFloat64(this.offset, true)\n    this.offset += 8\n    return val\n  }\n  public string(): string {\n    let finishedString: string = \"\"\n\n    while (true) {\n      const currentCharCode = this.u16();\n      if (currentCharCode === 0) break // keep going until a null char\n      \n      finishedString += String.fromCharCode(currentCharCode)\n    }\n\n    return finishedString\n  }\n}\n"]}