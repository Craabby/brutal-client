{"version":3,"file":"otherPlayer.js","sourceRoot":"","sources":["../../../../../src/packets/clientbound/updatePacket/otherPlayer.ts"],"names":[],"mappings":"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","sourcesContent":["import Vector from \"../../../vector\";\nimport { Reader } from \"../../../coder\";\n\nclass Player {\n  public chainSegments: Vector[] = [];\n  public energy: number = 0;\n  public flailAngle: number = 0;\n  public flailRadius: number = 0;\n  public angle: number = 0;\n  public hue: number = 0;\n  public position: Vector = new Vector(0, 0);\n  public flialPosition: Vector = new Vector(0, 0);\n  public attached: boolean = false;\n  public attracting: boolean = false;\n  public invulnerable: boolean = false;\n  public shock: boolean = false;\n  public decay: boolean = false;\n  public still: boolean = false;\n  public inside: boolean = false;\n  public charging: boolean = false;\n  public redFlail: boolean = false;\n  public redFlailDepleted: boolean = false;\n  public name: string = \"\";\n\n  public updateNetwork(packet: Reader, isCreation: boolean): void {\n    this.energy = packet.u8();\n    this.position = new Vector(packet.f32(), -packet.f32()).multiply(10);\n    this.angle = packet.f32();\n\n    this.updateChainFlail(packet, isCreation);\n    this.updateNetworkFlail(packet, isCreation);\n\n    if (isCreation) {\n      this.hue = packet.u16();\n    }\n  }\n\n  private updateChainFlail(packet: Reader, isCreation: boolean): void {\n    const chainSegmentsLength = packet.u8();\n    for (let i = 0; i < chainSegmentsLength; i++) {\n      if (isCreation) {\n        this.chainSegments.push(new Vector(0, 0));\n      }\n\n      this.chainSegments[i] = new Vector(packet.f32(), -packet.f32()).multiply(\n        10\n      );\n    }\n  }\n\n  private updateNetworkFlail(packet: Reader, isCreation: boolean): void {\n    this.flialPosition = new Vector(packet.f32(), -packet.f32()).multiply(10);\n    this.flailAngle = -packet.f32();\n    this.flailRadius = packet.u32() * 10;\n\n    const flags = packet.u16();\n\n    this.attached = !!(flags & 1);\n    this.attracting = !!(flags & 2);\n    this.invulnerable = !!(flags & 4);\n    this.shock = !!(flags & 8);\n    this.decay = !!(flags & 16);\n    this.still = !!(flags & 32);\n    this.inside = !!(flags & 64);\n    this.charging = !!(flags & 128);\n    this.redFlail = !!(flags & 256);\n    this.redFlailDepleted = !!(flags & 512);\n\n    if (this.redFlailDepleted) {\n      packet.u8(); // i dont think anyone really cares how much energy the red flial has left\n    }\n  }\n\n  deleteNetwork() {} // you do literally nothing aside from `delete <id>` for the deletion packets lol\n}\n\nexport default Player;\n"]}