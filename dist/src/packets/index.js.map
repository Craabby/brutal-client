{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/packets/index.ts"],"names":[],"mappings":";;;AAGA,MAAM,WAAW,GAAQ;IACvB,IAAI,EAAE,OAAO,CAAC,oBAAoB,CAAC;IACnC,IAAI,EAAE,OAAO,CAAC,oBAAoB,CAAC;IACnC,KAAK,EAAE,OAAO,CAAC,qBAAqB,CAAC;IACrC,KAAK,EAAE,OAAO,CAAC,qBAAqB,CAAC;IACrC,mBAAmB;IACnB,YAAY;CACb,CAAA;AAED,MAAM,WAAW,GAAQ;IACvB,WAAW,EAAE,OAAO,CAAC,2BAA2B,CAAC;IACjD,OAAO,EAAE,OAAO,CAAC,uBAAuB,CAAC;CAC1C,CAAA;AAED,MAAM,kBAAkB,GAAQ;IAC9B,CAAC,IAAI,CAAC,EAAE,SAAS;IACjB,CAAC,IAAI,CAAC,EAAE,SAAS;IACjB,CAAC,IAAI,CAAC,EAAE,SAAS;IACjB,CAAC,IAAI,CAAC,EAAE,SAAS;IACjB,CAAC,IAAI,CAAC,EAAE,SAAS;IACjB,CAAC,IAAI,CAAC,EAAE,SAAS;IACjB,CAAC,IAAI,CAAC,EAAE,aAAa;IACrB,CAAC,IAAI,CAAC,EAAE,aAAa,EAAE,uBAAuB;CAC/C,CAAA;AAGD,SAAgB,MAAM,CAAC,IAAY,EAAE,IAAY;IAC/C,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE;QACrC,MAAM,IAAI,KAAK,CAAC,sBAAsB,IAAI,GAAG,CAAC,CAAA;KAC/C;IAED,OAAO,WAAW,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAA;AAChC,CAAC;AAND,wBAMC;AAED,SAAgB,MAAM,CAAC,IAAY;IACjC,MAAM,MAAM,GAAW,IAAI,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAA;IAC9C,MAAM,IAAI,GAAG,kBAAkB,CAAC,MAAM,CAAC,CAAC;IAExC,OAAO,WAAW,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;AACzC,CAAC;AALD,wBAKC","sourcesContent":["import Vector from \"../vector\"\nimport ParsedClientboundPacket from \"../interfaces/parsedClientboundPacket\"\n\nconst serverbound: any = {\n  ping: require(\"./serverbound/ping\"),\n  init: require(\"./serverbound/init\"),\n  spawn: require(\"./serverbound/spawn\"),\n  input: require(\"./serverbound/input\"),\n  // resizeWindow: 7,\n  // click: 8,\n}\n\nconst clientbound: any = {\n  leaderboard: require(\"./clientbound/leaderboard\"),\n  unknown: require(\"./clientbound/unknown\"),\n}\n\nconst clientboundOpcodes: any = {\n  [0x00]: \"unknown\",\n  [0xa0]: \"unknown\",\n  [0xa1]: \"unknown\",\n  [0xa4]: \"unknown\",\n  [0xa6]: \"unknown\",\n  [0xb4]: \"unknown\",\n  [0xa5]: \"leaderboard\", // scores are a u16 instead of a u32\n  [0xb5]: \"leaderboard\", // all scores are a u32\n}\n\n\nexport function encode(type: string, data: object): ArrayBuffer {\n  if (!serverbound.hasOwnProperty(type)) {\n    throw new Error(`Unsuppored packet '${type}'`)\n  }\n\n  return serverbound[type](data)\n}\n\nexport function decode(data: Buffer): ParsedClientboundPacket {\n  const opcode: number = new Uint8Array(data)[0]\n  const type = clientboundOpcodes[opcode];\n\n  return clientbound[type](opcode, data);\n}"]}