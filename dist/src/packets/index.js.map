{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/packets/index.ts"],"names":[],"mappings":";;;AAGA,MAAM,WAAW,GAAQ;IACvB,IAAI,EAAE,OAAO,CAAC,oBAAoB,CAAC;IACnC,IAAI,EAAE,OAAO,CAAC,oBAAoB,CAAC;IACnC,KAAK,EAAE,OAAO,CAAC,qBAAqB,CAAC;IACrC,KAAK,EAAE,OAAO,CAAC,qBAAqB,CAAC;IACrC,mBAAmB;IACnB,YAAY;CACb,CAAC;AAEF,MAAM,WAAW,GAAQ;IACvB,WAAW,EAAE,OAAO,CAAC,2BAA2B,CAAC;IACjD,MAAM,EAAE,OAAO,CAAC,sBAAsB,CAAC;IACvC,OAAO,EAAE,OAAO,CAAC,uBAAuB,CAAC;CAC1C,CAAC;AAEF,MAAM,kBAAkB,GAAQ;IAC9B,CAAC,IAAI,CAAC,EAAE,aAAa;IACrB,CAAC,IAAI,CAAC,EAAE,QAAQ;IAChB,CAAC,IAAI,CAAC,EAAE,SAAS;IACjB,CAAC,IAAI,CAAC,EAAE,SAAS;IACjB,CAAC,IAAI,CAAC,EAAE,SAAS;IACjB,CAAC,IAAI,CAAC,EAAE,SAAS;IACjB,CAAC,IAAI,CAAC,EAAE,SAAS;IACjB,CAAC,IAAI,CAAC,EAAE,SAAS;CAClB,CAAC;AAEF,SAAgB,MAAM,CAAC,IAAY,EAAE,IAAY,EAAE,GAAQ;IACzD,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE;QACrC,MAAM,IAAI,KAAK,CAAC,sBAAsB,IAAI,GAAG,CAAC,CAAC;KAChD;IAED,OAAO,WAAW,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;AACtC,CAAC;AAND,wBAMC;AAED,SAAgB,MAAM,CAAC,IAAY,EAAE,GAAQ;IAC3C,MAAM,MAAM,GAAW,IAAI,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/C,MAAM,IAAI,GAAG,kBAAkB,CAAC,MAAM,CAAC,CAAC;IAExC,OAAO,WAAW,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;AACtC,CAAC;AALD,wBAKC","sourcesContent":["import Vector from \"../vector\";\nimport ParsedClientboundPacket from \"../interfaces/parsedClientboundPacket\";\n\nconst serverbound: any = {\n  ping: require(\"./serverbound/ping\"),\n  init: require(\"./serverbound/init\"),\n  spawn: require(\"./serverbound/spawn\"),\n  input: require(\"./serverbound/input\"),\n  // resizeWindow: 7,\n  // click: 8,\n};\n\nconst clientbound: any = {\n  leaderboard: require(\"./clientbound/leaderboard\"),\n  update: require(\"./clientbound/update\"),\n  unknown: require(\"./clientbound/unknown\"),\n};\n\nconst clientboundOpcodes: any = {\n  [0xb5]: \"leaderboard\",\n  [0xb4]: \"update\",\n  [0xa0]: \"unknown\",\n  [0xa1]: \"unknown\",\n  [0xa4]: \"unknown\",\n  [0xa6]: \"unknown\",\n  [0x01]: \"unknown\", // only in eu servers??\n  [0x00]: \"unknown\",\n};\n\nexport function encode(type: string, data: object, bot: any): ArrayBuffer {\n  if (!serverbound.hasOwnProperty(type)) {\n    throw new Error(`Unsuppored packet '${type}'`);\n  }\n\n  return serverbound[type](data, bot);\n}\n\nexport function decode(data: Buffer, bot: any): ParsedClientboundPacket {\n  const opcode: number = new Uint8Array(data)[0];\n  const type = clientboundOpcodes[opcode];\n\n  return clientbound[type](data, bot);\n}\n"]}